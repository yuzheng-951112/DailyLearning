第十六章 TCP:传输控制协议
16.1 TCP介绍
TCP提供一种面向链接的、可靠的字节流服务。
面向连接意味着两个使用TCP的应用(通常是一个客户和一个服务器)在彼此交换数据之间必须先建立一个TCP链接。
在一个TCP连接中，仅有两方进行彼此通信。

TCP通过一下方式来提供可靠性：
1.应用数据被分割成TCP认为最合适发送的数据块。
2.当TCP发送一段后，他启动一个定时器，等待目的端口确认收到这个报文段。如果不能及时收到一个确认，将重发这个报文段。
3.当TCP收到发自TCP连接另一端的数据，他将发送一个确认。这个确认不是立即发送，通常将推迟几分之一秒。
4.TCP将保持它首部和数据的检验和(伪首部加在一起进行校验和)。
5.既然TCP报文段作为IP数据报来传输，而IP数据报的到达可能会失序，因此TCP报文段的到达也可能会失序。如果必要，TCP将对收到的数据进行重新排序，将收到的数据以正确的顺序交给应用层。
6.TCP还提供流量控制。TCP连接的每一方都有固有大小的缓冲空间。TCP的接收端只允许另一端发送接收端缓冲所能接纳的数据。这将防止较快主机至使较慢主机的缓存去溢出。

TCP的字节流
两个应用程序通过TCP连接交换8bit字节构成的字节流。TCP不在字节流中插入记录标识符。我们将这称为字节流服务(byte steam service)。如果一方的应用程序先传10字节，又传20字节，再传50字节，连接的另一方将无法了解发送发每次发送了多少字节。收方可以分4次接收这80字节，每次	接收20字节。一端将字节流放到TCP连接上，同样的字节流将出现在TCP连接的另一端。
另外，TCP对字节流的内容不作任何解释。TCP不知道传输的数据字节流是二进制数据，还是ASCII字符、EBCDIC字符或其他类型数据。对字节流的解释由TCP连接双方的应用层解释。	
16.2 TCP首部
  TCP包首部
源和目的端口号：用于寻找发送端和接收端的应用程序。源端口和目的端口加上源IP和目的IP确定一个TCP连接。一个端口号和一个IP地址也称为一个插口(socket)，插口对(socketpair)包括客户和服务器端口以及IP地址，可唯一确定互联网中每个TCP连接的双方。
序号：用来标识从TCP发送端向TCP接收端发送的数据字节流，它表示在这个报文段中的第一个数据字节。如果将字节流看作两个应用程序间的单向流动，则TCP用序号对每个字节进行计数。序号是32bit的无符号数，序号达到2的32次方后又从0开始。SYN标志消耗一个序号(将在下章详细介绍如何建立和终止连接，届时我们将看到FIN标志也要占用一个序号)。
确认序号：是上次已成功接收到数据字节序号加1。只有ACK标志为1时确认序号字段才有效。
发送ACK无需任何代价，因为	32bit的确认序号字段和ACK标志一样，总是TCP首部的一部分。因此，我们看到一旦一个连接建立起来，这个字段总是被设置，ACK标志也总是被设置	为1。
TCP为应用层提供全双工服务。这意味着数据能在两个方向上独立地进行传输。因此，连接的每一端必须保持每一个方向的传输数据序号。

TCP可以表述为一个没有选择确认或都否认的滑动窗口协议。我们说TCP缺少选择确认是因为TCP首部中的确认序号表示接收方已成功收到字节，但还不包含确认序号所指的字节。当前还无法对数据流中选定的部分进行确认。例如，1~1024字节已经成功接收到，下一报文段中包含序号从2049~3072的字节，接收端并不能确认这个新的报文端。它所能做的就是发回一个确认序号为1025的ACK。它也无法对一个报文段进行否认。例如，如果收到包含1025~2048字节的报文段，但它的检验和错。TCP接收端所能做的就是发回一个确认序号为1025的ACK。
 
(a)TCP没有选择确认窗口协议
 
(b)TCP没有否认滑动窗口协议
首部长度给出首部中32bit字的数目。需要这个值是因为任选字段的长度是可变的。这个字段占4bit，因此TCP最多有60字节的首部。然而，没有任选字段，正常的长度是20字节。
在TCP首部中有6个标志比特。它们中的多个可以同时被置1。
URG		紧急指针
ACK		确认序号有效
PSH		接收方应该尽量将这个报文段交给应用层(应用程序不理睬)
RST		重建连接
SYN		同步序号用来发起一个连接
FIN		发送端完成发送任务
TCP的流量控制由连接的每一端通过声明的窗口大小来提供(窗口可以理解为缓存)。
 
滑动窗口流量控制
检验和覆盖了整个的TCP报文段。
只有当URG标志置1时紧急指针才有效。
MMS：TCP数据包每次能够传输的最大数据分段，为1460字节。
 MTU与MMS
TCP报文段中的数据部分是可选的。
